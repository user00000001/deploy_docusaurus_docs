"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[2245],{3331:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var i=s(8101);const r={},a=i.createContext(r);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(a.Provider,{value:n},e.children)}},4154:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"english/blockchain/README","title":"From Compile To Private-Net","description":"Compile Section","source":"@site/docs/english/blockchain/README.md","sourceDirName":"english/blockchain","slug":"/english/blockchain/","permalink":"/deploy_docusaurus_docs/docs/english/blockchain/","draft":false,"unlisted":false,"editUrl":"https://github.com/user00000001/docusaurus_docs/tree/master/blog/docs/english/blockchain/README.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u82f1\u6587\u6587\u6863","permalink":"/deploy_docusaurus_docs/docs/category/\u82f1\u6587\u6587\u6863"},"next":{"title":"CONSOLE API USAGE","permalink":"/deploy_docusaurus_docs/docs/english/blockchain/consoleApi"}}');var r=s(5105),a=s(3331);const o={},t="From Compile To Private-Net",c={},d=[{value:"Compile Section",id:"compile-section",level:2},{value:"Prepare For Using It",id:"prepare-for-using-it",level:2},{value:"Usage",id:"usage",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"from-compile-to-private-net",children:"From Compile To Private-Net"})}),"\n",(0,r.jsx)(n.h2,{id:"compile-section",children:"Compile Section"}),"\n",(0,r.jsxs)(n.p,{children:["Get the main chain source. Make sure that ",(0,r.jsx)(n.a,{href:"https://golang.google.cn/dl/",children:(0,r.jsx)(n.strong,{children:"go"})})," is ready."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"**********************!!!PROTECTION POLICY!!!**********************\nWaiting For The Next Deployment, Maybe It Would Be Displayed After That.\n"})}),"\n",(0,r.jsx)(n.h2,{id:"prepare-for-using-it",children:"Prepare For Using It"}),"\n",(0,r.jsx)(n.p,{children:"Put binary files path into env path or move them into some env paths."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'echo "export PATH=$PATH:`pwd`/build/bin" >> ~/.bashrc && source ~/.bashrc\n'})}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(n.p,{children:["Tesra Main Chain bases on ",(0,r.jsx)(n.a,{href:"https://github.com/ethereum/go-ethereum",children:(0,r.jsx)(n.strong,{children:"go-ethereum"})}),", for more common usage details, you might need to visit ",(0,r.jsx)(n.a,{href:"https://geth.ethereum.org/docs/interface/command-line-options",children:(0,r.jsx)(n.strong,{children:"geth"})})," documents. Before using tesramain you need prepare some accounts. See ",(0,r.jsx)(n.a,{href:"/docs/english/blockchain/createAccounts",children:"Generate Accounts"}),", and prepare 7 or more accounts to add some accounts into source code, compile again to gain final tesramain, ",(0,r.jsx)(n.a,{href:"/docs/english/blockchain/modifyCode",children:"Modify Code"}),". Use tesramain's console bases on ",(0,r.jsx)(n.a,{href:"https://web3js.readthedocs.io/en/v1.2.0/",children:(0,r.jsx)(n.strong,{children:"web3"})}),", include pos modification could read this, ",(0,r.jsx)(n.a,{href:"/docs/english/blockchain/consoleApi",children:"API"}),"."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Boot first node."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"index=0 ;rm -rf ~/tesramainchain/data/$index/tesramain ;tesramain --etherbase $index --ethash.dagdir ~/tesramainchain/dag/$index --nodiscover --ipcpath ~/tesramainchain/ipc/$index --datadir ~/tesramainchain/data/$index --keystore ~/tesramainchain/keystore --port $((20000+$index)) --unlock $index --password ~/tesramainchain/password --verbosity 100 --firstPos 10 console\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Under the tesramain console, set the miner to work."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"miner.start(1)\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Check pow2pos block and mine status, whether mine blocked."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"eth.blockNumber\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"When the block number was not increased for a long while. Exit this console."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"exit\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Start tesramain with the generated data and mine block."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"**********************!!!PROTECTION POLICY!!!**********************\nWaiting For The Next Deployment, Maybe It Would Be Displayed After That.\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Watch terminal logs, miner will block again then record slot leader public key. check all accounts infomation. record the matched public key's index ",(0,r.jsx)(n.strong,{children:"FirstPosSlotLeaderIndex"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"tesramain --etherbase 0 --ethash.dagdir ~/tesramainchain/dag/0 --nodiscover --ipcpath ~/tesramainchain/ipc/0 --keystore ~/tesramainchain/keystore --unlock 0 --password ~/tesramainchain/password console --exec \"eth.accounts.forEach(function(v, i, a){var result=personal.showPublicKey(v, '1qaz'); console.log(i, a[i], JSON.stringify(result))}\"\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Show the enode address ",(0,r.jsx)(n.strong,{children:"FirstBootEnode"})," of the node just booted."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'tesramain --etherbase 0 --ethash.dagdir ~/tesramainchain/dag/0 --nodiscover --ipcpath ~/tesramainchain/ipc/0 --keystore ~/tesramainchain/keystore --unlock 0 --password ~/tesramainchain/password console --exec "admin.nodeInfo.enode"\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Boot the ",(0,r.jsx)(n.strong,{children:"FirstPosSlotLeader"})," node."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"index=${FirstPosSlotLeaderIndex} ;tesramain --etherbase $index --ethash.dagdir ~/tesramainchain/dag/$index --nodiscover --ipcpath ~/tesramainchain/ipc/$index --datadir ~/tesramainchain/data/$index --keystore ~/tesramainchain/keystore --port $((20000+$index)) --unlock $index --password ~/tesramainchain/password --verbosity 100 --firstPos 10 console\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Then add ",(0,r.jsx)(n.strong,{children:"FirstBootEnode"})," as a peer, and set miner to work."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"admin.addPeer(FirstBootEnode)\nminer.start(1)\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Check the block number whether increased."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"**********************!!!PROTECTION POLICY!!!**********************\nWaiting For The Next Deployment, Maybe It Would Be Displayed After That.\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"After these operations, the private net with two nodes has been set up, and the consensus protocol has been upgraded from pow to (d)pos."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);